
Array.from(
  document.querySelectorAll('span.currency[data-value][data-currency]')
).forEach(function (x) {
  x.textContent = Intl.NumberFormat(navigator.language, {
    style: 'currency',
    currency: x.dataset.currency,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2,
    useGrouping: true
  }).format(x.dataset.value);
});

Array.from(
  document.querySelectorAll('span.currency[data-value]:not([data-currency])')
).forEach(function (x) {
  x.textContent = Intl.NumberFormat(navigator.language, {
    minimumFractionDigits: 0,
    maximumFractionDigits: 2,
    useGrouping: true
  }).format(x.dataset.value);
});

window.mdc.autoInit();

var serviceList = document.getElementById(#{theId}).MDCList;

serviceList.selectedIndex = serviceList.listElements.map(
  (x,i) => x.matches('[aria-checked=true]') ? [i] : []
).flat();

serviceList.listen('MDCList:selectionChange',function (e) {
  const l = this.MDCList; 
  if (0 === l.selectedIndex.filter(x => e.detail.changedIndices.includes(x)).length) {
    l.selectedIndex = [...l.selectedIndex,...e.detail.changedIndices];
  } else {
    l.selectedIndex = l.selectedIndex.filter(x => !e.detail.changedIndices.includes(x));
  }

  document.getElementById('footerBookCount').textContent = l.selectedIndex.length;
  
  Array.from(
    document.getElementById('footerBookAmount').querySelectorAll(
      'span.currency[data-value][data-currency]'
    )
  ).forEach(function (y) {
    y.textContent = Intl.NumberFormat(navigator.language, {
      style: 'currency',
      currency: y.dataset.currency,
      minimumFractionDigits: 0,
      maximumFractionDigits: 2,
      useGrouping: true
    }).format(
      l.listElements.filter(
	x => x.matches('[aria-checked=true]')
      ).reduce((a,b) => a + Number(b.dataset.amount),0)
    );
  });
  
  Array.from(
    document.getElementById('footerBookAmount').querySelectorAll(
      'span.currency[data-value]:not([data-currency])'
    )
  ).forEach(function (y) {
    y.textContent = Intl.NumberFormat(navigator.language, {
      minimumFractionDigits: 0,
      maximumFractionDigits: 2,
      useGrouping: true
    }).format(
      l.listElements.filter(
	x => x.matches('[aria-checked=true]')
      ).reduce((a,b) => a + Number(b.dataset.amount),0)
    );
  });
});
